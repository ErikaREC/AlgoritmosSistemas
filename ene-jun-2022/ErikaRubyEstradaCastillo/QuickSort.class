package MetodosDeOrdenamiento;
public class QuickSort{

	  public static void main(String a[]){
	      int i;
	      int array[] = {5,64,54,80,90,20};

	      /*System.out.println("    Quick Sort\n");
	      System.out.println("Valores antes de QuickSort:\n");
	      for(i = 0; i < array.length; i++)
	          System.out.print( array[i]+"  ");
	      System.out.println();
	      quick_srt(array,0,array.length-1);
	      System.out.print("\n\n\nValores despues de QuickSort:\n\n");
	 
	      for(i = 0; i <array.length; i++)
	          System.out.print(array[i]+"  ");
	      System.out.println();
	      
	      System.out.println("Orden descendente:");*/
	        ordSelDesc(array);
	        for (int num : array) {
	        	
	        	if (num==80){
	        		System.out.println("RezarPorLosParciales");
	        	}
	        	if (num==20){
	        		System.out.println("LlorarEnUnRincón");
	        	}
	        	if (num==90){
	        		System.out.println("ComprarLasBotellasDeSobornos");
	        	}
	        	if (num==64){
	        		System.out.println("EstudiarParaAlgoritmos");
	        	}
	        	if (num==54){
	        		System.out.println("CompletarTareasPendientes");
	        	}
	        }
	            //System.out.println(num);}
	        
	
	  }
	private static void ordSelDesc(int[] array) {
		
	        for (int i = 0 ; i < array.length - 1 ; i++) {
	            int max = i;
	 
	            for (int j = i + 1 ; j < array.length ; j++) {
	                if (array[j] > array[max]) {
	                    max = j;    
	                }
	            }
	 
	            if (i != max) {
	               
	                int aux = array[i];
	                array[i] = array[max];
	                array[max] = aux;
	            }
		
	}}
	public static void quick_srt(int array[],int low, int n){
	      int lo = low;
	      int hi = n;
	      if (lo >= n) {
	          return;
	      }
	      int mid = array[(lo + hi) / 2];
	      while (lo < hi) {
	          while (lo<hi && array[lo] < mid) {
	              lo++;
	          }
	          while (lo<hi && array[hi] > mid) {
	              hi--;
	          }
	          if (lo < hi) {
	              int T = array[lo];
	              array[lo] = array[hi];
	              array[hi] = T;
	          }
	      }
	      if (hi < lo) {
	          int T = hi;
	          hi = lo;
	          lo = T;
	      }
	      quick_srt(array, low, lo);
	      quick_srt(array, lo == low ? lo+1 : lo, n);
	   }
	}
