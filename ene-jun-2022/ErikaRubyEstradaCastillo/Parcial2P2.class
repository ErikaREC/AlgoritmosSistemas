package MetodosDeOrdenamiento;
import java.util.Arrays;


public class Parcial2P2 {
	public static void main(String args[]) {
      
        String[] Playlist = {"FiestaDeLocos", "Matador", "Comprendes,Mendes?", "PadreNuestro", "YoTomo","Frijolero","SiSeñor","Imagina"};
        
 
        QuickSortName algorithm = new QuickSortName();
        algorithm.sort(Playlist);
        System.out.println(Arrays.toString(Playlist));
        
       
        String A = "SiSeñor";
        int B = Arrays.binarySearch(Playlist,A);
        if (B < 0)
            System.out.println("-1");
        else
            System.out.println(B);
        
        String C = "Imagina";
        int D = Arrays.binarySearch(Playlist,C);
        if (D < 0)
            System.out.println("-1");
        else
            System.out.println(D);
        
        String F = "PadreNuestro";
        int G = Arrays.binarySearch(Playlist,F);
        if (G < 0)
            System.out.println("-1");
        else
            System.out.println(G);
        
        String H = "LaDosisPerfecta";
        int I = Arrays.binarySearch(Playlist,H);
        if (I < 0)
            System.out.println("-1");
        else
            System.out.println(I);
        
        String J = "Matador";
        int K = Arrays.binarySearch(Playlist,J);
        if (K < 0)
            System.out.println("-1");
        else
            System.out.println(K);
        
    }
}
 
class QuickSortName {
 
    private String input[];
    private int length;
 
    public void sort(String[] names) {
 
        if (names == null || names.length == 0) {
            return;
        }
 
        this.input = names;
        length = names.length;
        quickSort(0, length - 1);
    }
 
    
    private void quickSort(int low, int high) {
        int i = low;
        int j = high;
 
        String pivot = input[low + (high - low) / 2];
 
       
        while (i <= j) {
           
            while (input[i].charAt(0) < pivot.charAt(0)) {
                i++;
            }
            while (input[j].charAt(0) > pivot.charAt(0)) {
                j--;
            }
            if (i <= j) {
                swap(i, j);
               
                i++;
                j--;
            }
        }
 
      
        if (low < j) {
            quickSort(low, j);
        }
 
        if (i < high) {
            quickSort(i, high);
        }
    }
 
    private void swap(int i, int j) {
        String temp = input[i];
        input[i] = input[j];
        input[j] = temp;
    }
   
   
}


